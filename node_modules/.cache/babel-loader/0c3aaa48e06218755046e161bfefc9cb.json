{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongList.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useState } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport './styles/Songlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongList = _ref => {\n  _s();\n\n  let {\n    songs,\n    currentSong,\n    setCurrentSong\n  } = _ref;\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const filteredSongList = songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  const previewSongs = filteredSongList.length > 0 ? filteredSongList : songs;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"songList\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"songListTable\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"headRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deezer link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), previewSongs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"insonglist\",\n        onDoubleClick: () => setCurrentSong(song.id),\n        children: /*#__PURE__*/_jsxDEV(SongItem, {\n          song: song,\n          playNow: currentSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongList, \"+kTxUSDB357uoO84DdT8rtOuZyY=\");\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongList.js"],"names":["SongItem","useState","SongFilter","SongList","songs","currentSong","setCurrentSong","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","filteredSongList","filter","song","artist","previewSongs","length","map","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,uBAAP;;;AAGA,MAAMC,QAAQ,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,GAAyC;AAEvD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMQ,mBAAmB,GAAIC,cAAD,IAAoB;AAC5CF,IAAAA,iBAAiB,CAACE,cAAD,CAAjB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAI;AAC1C,WAAOA,IAAI,CAACC,MAAL,KAAgBP,cAAvB;AACH,GAFwB,CAAzB;AAKA,QAAMQ,YAAY,GAAGJ,gBAAgB,CAACK,MAAjB,GAA0B,CAA1B,GAA8BL,gBAA9B,GAAiDP,KAAtE;AAGA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAEG,cADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,+BACA;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKM,YAAY,CAACE,GAAb,CAAkBJ,IAAD,iBACd;AAAkB,QAAA,SAAS,EAAC,YAA5B;AAAyC,QAAA,aAAa,EAAE,MAAMP,cAAc,CAACO,IAAI,CAACK,EAAN,CAA5E;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,IAAI,EAAEL,IADV;AAEI,UAAA,OAAO,EAAER;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ,SAASQ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADH,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA7CD;;GAAMf,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useState} from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport './styles/Songlist.css'\n\n\nconst SongList = ({songs, currentSong, setCurrentSong}) => {\n\n    const [filteredArtist, setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) => {\n        setFilteredArtist(selectedArtist);\n    };\n\n    const filteredSongList = songs.filter(song => {\n        return song.artist === filteredArtist;\n    });\n\n\n    const previewSongs = filteredSongList.length > 0 ? filteredSongList : songs\n\n\n    return (\n        <div>\n            <SongFilter\n                selected={filteredArtist}\n                onChangeFilter={filterChangeHandler}\n            />\n            <table className=\"songList\">\n                <thead className=\"songListTable\">\n                <tr className=\"headRow\">\n                    <th>Name</th>\n                    <th>Artist</th>\n                    <th>Album</th>\n                    <th>Duration</th>\n                    <th>Deezer link</th>\n                    <th>like</th>\n                </tr>\n                </thead>\n\n                {previewSongs.map((song) =>\n                    <tr key={song.id} className='insonglist' onDoubleClick={() => setCurrentSong(song.id)}>\n                        <SongItem\n                            song={song}\n                            playNow={currentSong}\n                        />\n                    </tr>)}\n\n            </table>\n        </div>\n    );\n}\nexport default SongList;\n"]},"metadata":{},"sourceType":"module"}