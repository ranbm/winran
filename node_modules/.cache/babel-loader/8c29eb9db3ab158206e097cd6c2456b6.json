{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useState, useEffect } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songlist = props => {\n  _s();\n\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const [playingNow, setPlayNow] = useState(false);\n  const [fontWeight, setFontWeight] = useState('normal');\n  this.state = {\n    selected: []\n  };\n\n  const clickHandler = id => {\n    setFontWeight('bold');\n    console.log('aaa');\n    console.log(playingNow);\n    this.setState(state => {\n      if (state.selected.includes(id)) {\n        return state.selected.filter(item => item !== id);\n      }\n\n      return [...state.selected, id];\n    });\n  };\n\n  const filteredSongList = props.songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  let songsContent = props.songs;\n\n  if (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => this.clickHandler(song.id),\n      style: this.state.selected.includes(song.id) ? {\n        fontWeight: \"normal\"\n      } : {\n        fontWeight: \"bold\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 57\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 51\n    }, this));\n  } else {\n    songsContent = props.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: this.state.selected.includes(i) ? {\n        fontWeight: \"normal\"\n      } : {\n        fontWeight: \"bold\"\n      },\n      onClick: () => this.clickHandler(i),\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 44\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 46\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"songList\",\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), songsContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Songlist, \"yDyq1IeQDZZx4MP2ut7MTOyhnvc=\");\n\n_c = Songlist;\nexport default Songlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songlist\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js"],"names":["SongItem","useState","useEffect","SongFilter","Songlist","props","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","playingNow","setPlayNow","fontWeight","setFontWeight","state","selected","clickHandler","id","console","log","setState","includes","filter","item","filteredSongList","songs","song","artist","songsContent","length","map","title","album","duration","link","like","i"],"mappings":"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","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useState, useEffect} from \"react\";\nimport SongFilter from \"./SongFilter\";\n\n\nconst Songlist = (props) => {\n\n    const [filteredArtist, setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) => {\n        setFilteredArtist(selectedArtist);\n    };\n    const [playingNow, setPlayNow] = useState(false)\n    const [fontWeight, setFontWeight] = useState('normal')\n    this.state = {\n        selected: []\n    };\n    const clickHandler = (id) => {\n\n        setFontWeight('bold')\n        console.log('aaa')\n        console.log(playingNow)\n        this.setState(state => {\n            if (state.selected.includes(id)) {\n                return state.selected.filter(item => item !== id);\n            }\n            return [...state.selected, id];\n        });\n    };\n\n\n\n\nconst filteredSongList = props.songs.filter(song => {\n    return song.artist === filteredArtist;\n});\n\nlet songsContent = props.songs;\nif (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map((song) => <li key={song.id}\n                                                      onClick={() => this.clickHandler(song.id)}\n                                                      style={\n                                                          this.state.selected.includes(song.id)\n                                                              ? {fontWeight: \"normal\"}\n                                                              : {fontWeight: \"bold\"}\n                                                      }><SongItem\n        key={song.id}\n        title={song.title}\n        artist={song.artist}\n        album={song.album}\n        duration={song.duration}\n        link={song.link}\n        like={song.like}\n\n    />\n    </li>)\n} else {\n    songsContent = props.songs.map((song) => <li key={song.id} style={\n        this.state.selected.includes(i)\n            ? {fontWeight: \"normal\"}\n            : {fontWeight: \"bold\"}\n    } onClick={() => this.clickHandler(i)}><SongItem\n        key={song.id}\n        title={song.title}\n        artist={song.artist}\n        album={song.album}\n        duration={song.duration}\n        link={song.link}\n        like={song.like}\n\n    /></li>)\n}\nreturn (\n    <ul className=\"songList\">\n        <SongFilter\n            selected={filteredArtist}\n            onChangeFilter={filterChangeHandler}\n        />\n\n        {songsContent}\n\n    </ul>\n);\n}\nexport default Songlist;"]},"metadata":{},"sourceType":"module"}