{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongItem.js\",\n    _s = $RefreshSig$();\n\nimport './SongItem.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongItem = props => {\n  _s();\n\n  const [liked, setLiked] = useState(props.like);\n  const fontWeight = props.playing ? setFontWeight('bold') : setFontWeight('normal');\n\n  const clickHandler = () => {\n    console.log(liked);\n    console.log('1111');\n    setLiked(true);\n    console.log(liked);\n  };\n\n  const clickHandler2 = () => {\n    console.log('aaa');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    onDoubleClick: clickHandler2,\n    style: {\n      fontWeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist\",\n      children: props.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album\",\n      children: props.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"duration\",\n      children: props.duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link\",\n      children: props.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"liked\",\n      onClick: clickHandler,\n      children: \"like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongItem, \"9Iim1KX/rbzNOh6tLYMYRwy9CGA=\");\n\n_c = SongItem;\nexport default SongItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongItem.js"],"names":["useEffect","useState","SongItem","props","liked","setLiked","like","fontWeight","playing","setFontWeight","clickHandler","console","log","clickHandler2","title","artist","album","duration","link"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAACE,KAAK,CAACG,IAAP,CAAjC;AACA,QAAMC,UAAU,GAAGJ,KAAK,CAACK,OAAN,GAAgBC,aAAa,CAAC,MAAD,CAA7B,GAAwCA,aAAa,CAAC,QAAD,CAAxE;;AACA,QAAMC,YAAY,GAAG,MAAK;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GALD;;AAMA,QAAMS,aAAa,GAAG,MAAM;AAExBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAuB,IAAA,aAAa,EAAEC,aAAtC;AAAqD,IAAA,KAAK,EAAE;AAACN,MAAAA;AAAD,KAA5D;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBJ,KAAK,CAACW;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBX,KAAK,CAACY;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBZ,KAAK,CAACa;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2Bb,KAAK,CAACc;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBd,KAAK,CAACe;AAA7B;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAER,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBD;;GAAMR,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import './SongItem.css'\nimport {useEffect, useState} from \"react\";\n\nconst SongItem = (props) => {\n    const [liked,setLiked] = useState(props.like)\n    const fontWeight = props.playing ? setFontWeight('bold') : setFontWeight('normal')\n    const clickHandler = () =>{\n        console.log(liked);\n        console.log('1111');\n        setLiked(true);\n        console.log(liked);\n    }\n    const clickHandler2 = () => {\n\n        console.log('aaa')\n    }\n\n    return (\n        <div className=\"song\"  onDoubleClick={clickHandler2} style={{fontWeight}}>\n            <div className='title'>{props.title}</div>\n            <div className=\"artist\">{props.artist}</div>\n            <div className=\"album\">{props.album}</div>\n            <div className=\"duration\">{props.duration}</div>\n            <div className=\"link\">{props.link}</div>\n            <button className=\"liked\" onClick={clickHandler}>like</button>\n        </div>\n\n    )\n}\n\nexport default SongItem;"]},"metadata":{},"sourceType":"module"}