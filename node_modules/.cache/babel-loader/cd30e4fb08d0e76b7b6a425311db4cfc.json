{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useState, useEffect } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songlist = props => {\n  _s();\n\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const [playingNow, setPlayNow] = useState(false);\n  useEffect(playingNow => {\n    console.log('working');\n  });\n\n  const clickHandler = props => {\n    setPlayNow(this.props.title);\n    console.log(this.title);\n  };\n\n  const filteredSongList = props.songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  let songsContent = props.songs;\n\n  if (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n      title: song.title,\n      artist: song.artist,\n      album: song.album,\n      duration: song.duration,\n      link: song.link,\n      like: song.like\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 55\n    }, this));\n  } else {\n    songsContent = props.songs.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n      title: song.title,\n      artist: song.artist,\n      album: song.album,\n      duration: song.duration,\n      link: song.link,\n      like: song.like\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 54\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"songList\",\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: clickHandler,\n      children: songsContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Songlist, \"KqK0lCizhpE1RnqOihogrucXsa8=\");\n\n_c = Songlist;\nexport default Songlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songlist\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js"],"names":["SongItem","useState","useEffect","SongFilter","Songlist","props","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","playingNow","setPlayNow","console","log","clickHandler","title","filteredSongList","songs","filter","song","artist","songsContent","length","map","album","duration","link","like","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAqCN,QAAQ,CAAC,EAAD,CAAnD;;AAEA,QAAMO,mBAAmB,GAAIC,cAAD,IAAmB;AAC3CF,IAAAA,iBAAiB,CAACE,cAAD,CAAjB;AACH,GAFD;;AAGH,QAAM,CAACC,UAAD,EAAYC,UAAZ,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACGC,EAAAA,SAAS,CAAEQ,UAAD,IACV;AACIE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHQ,CAAT;;AAIA,QAAMC,YAAY,GAAIT,KAAD,IAAU;AAC9BM,IAAAA,UAAU,CAAC,KAAKN,KAAL,CAAWU,KAAZ,CAAV;AACGH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACH,GAHD;;AAMA,QAAMC,gBAAgB,GAAGX,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAE;AAC9C,WAAOA,IAAI,CAACC,MAAL,KAAgBd,cAAvB;AACH,GAFwB,CAAzB;AAIA,MAAIe,YAAY,GAAGhB,KAAK,CAACY,KAAzB;;AACA,MAAID,gBAAgB,CAACM,MAAjB,GAAwB,CAA5B,EAA8B;AAC1BD,IAAAA,YAAY,GAAGL,gBAAgB,CAACO,GAAjB,CAAsBJ,IAAD,iBAAU,QAAC,QAAD;AAEtC,MAAA,KAAK,EAAEA,IAAI,CAACJ,KAF0B;AAGtC,MAAA,MAAM,EAAEI,IAAI,CAACC,MAHyB;AAItC,MAAA,KAAK,EAAED,IAAI,CAACK,KAJ0B;AAKtC,MAAA,QAAQ,EAAEL,IAAI,CAACM,QALuB;AAMtC,MAAA,IAAI,EAAEN,IAAI,CAACO,IAN2B;AAOtC,MAAA,IAAI,EAAEP,IAAI,CAACQ;AAP2B,OACjCR,IAAI,CAACS,EAD4B;AAAA;AAAA;AAAA;AAAA,YAA/B,CAAf;AAQQ,GATZ,MAUQ;AACAP,IAAAA,YAAY,GAAGhB,KAAK,CAACY,KAAN,CAAYM,GAAZ,CAAiBJ,IAAD,iBAAU,QAAC,QAAD;AAErC,MAAA,KAAK,EAAEA,IAAI,CAACJ,KAFyB;AAGrC,MAAA,MAAM,EAAEI,IAAI,CAACC,MAHwB;AAIrC,MAAA,KAAK,EAAED,IAAI,CAACK,KAJyB;AAKrC,MAAA,QAAQ,EAAEL,IAAI,CAACM,QALsB;AAMrC,MAAA,IAAI,EAAEN,IAAI,CAACO,IAN0B;AAOrC,MAAA,IAAI,EAAEP,IAAI,CAACQ;AAP0B,OAChCR,IAAI,CAACS,EAD2B;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAf;AASC;;AACT,sBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAEtB,cADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAI,MAAA,OAAO,EAAEM,YAAb;AAAA,gBAA4BO;AAA5B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArDD;;GAAMjB,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useState,useEffect} from \"react\";\nimport SongFilter from \"./SongFilter\";\n\n\n\nconst Songlist = (props) => {\n    const [filteredArtist,setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) =>{\n        setFilteredArtist(selectedArtist);\n    };\n const [playingNow,setPlayNow] = useState(false)\n    useEffect((playingNow)=>\n    {\n        console.log('working')\n    })\n    const clickHandler = (props) =>{\n     setPlayNow(this.props.title)\n        console.log(this.title)\n    }\n\n\n    const filteredSongList = props.songs.filter(song=>{\n        return song.artist === filteredArtist;\n    });\n\n    let songsContent = props.songs;\n    if (filteredSongList.length>0){\n        songsContent = filteredSongList.map((song) => <SongItem\n                key={song.id}\n                title={song.title}\n                artist={song.artist}\n                album={song.album}\n                duration={song.duration}\n                link={song.link}\n                like={song.like}\n            />)}\n        else{\n            songsContent = props.songs.map((song) => <SongItem\n                key={song.id}\n                title={song.title}\n                artist={song.artist}\n                album={song.album}\n                duration={song.duration}\n                link={song.link}\n                like={song.like}\n    />)\n            }\n    return (\n        <ul className=\"songList\">\n            <SongFilter\n                selected={filteredArtist}\n                onChangeFilter={filterChangeHandler}\n                />\n            <li onClick={clickHandler}>{songsContent}</li>\n\n        </ul>\n    );\n}\nexport default Songlist;"]},"metadata":{},"sourceType":"module"}