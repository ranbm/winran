{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useState } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songlist = props => {\n  _s();\n\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const changePlayingNow = id => {\n    console.log('aaa');\n    console.log(songsContent);\n    songsContent.map(song => song.props.children.props.id === id ? song.playNow = true : song.playNow = false);\n  };\n\n  const filteredSongList = props.songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  let songsContent;\n\n  if (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: song.id,\n      onClick: () => changePlayingNow(song.id),\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like,\n        playNow: song.playNow\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this));\n  } else {\n    songsContent = props.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: song.id,\n      onClick: () => changePlayingNow(song.id),\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like,\n        playNow: song.playNow\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 131\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 50\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"songList\",\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), songsContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Songlist, \"+kTxUSDB357uoO84DdT8rtOuZyY=\");\n\n_c = Songlist;\nexport default Songlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songlist\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js"],"names":["SongItem","useState","SongFilter","Songlist","props","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","changePlayingNow","id","console","log","songsContent","map","song","children","playNow","filteredSongList","songs","filter","artist","length","title","album","duration","link","like"],"mappings":"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","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useState} from \"react\";\nimport SongFilter from \"./SongFilter\";\n\n\nconst Songlist = (props) => {\n\n    const [filteredArtist, setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) => {\n        setFilteredArtist(selectedArtist);\n    };\n\n    const changePlayingNow = (id) =>{\n        console.log('aaa')\n        console.log(songsContent)\n        songsContent.map((song) => song.props.children.props.id === id ? song.playNow =true : song.playNow=false);\n    }\n\n\n    const filteredSongList = props.songs.filter(song => {\n        return song.artist === filteredArtist;\n    });\n\n    let songsContent;\n    if (filteredSongList.length > 0) {\n        songsContent = filteredSongList.map((song) =>\n            <li key={song.id} className={song.id} onClick={() => changePlayingNow(song.id)}>\n            <SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n            playNow={song.playNow}\n\n        />\n        </li>)\n    } else {\n        songsContent = props.songs.map((song) => <li key={song.id} className={song.id} onClick={() => changePlayingNow(song.id)} ><SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n            playNow={song.playNow}\n\n        /></li>)\n    }\n    return (\n        <ul className=\"songList\">\n            <SongFilter\n                selected={filteredArtist}\n                onChangeFilter={filterChangeHandler}\n            />\n\n            {songsContent}\n\n        </ul>\n    );\n}\nexport default Songlist;"]},"metadata":{},"sourceType":"module"}