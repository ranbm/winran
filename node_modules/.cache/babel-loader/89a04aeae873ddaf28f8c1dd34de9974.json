{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongList.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useEffect, useState } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport './styles/Songlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongList = _ref => {\n  _s();\n\n  let {\n    songs\n  } = _ref;\n  const [currentSong, setCurrentSong] = useState();\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const ChangePlayingNow = id => {\n    console.log(id);\n    songs.map(song => song.id === id ? song.playNow = true : song.playNow = false);\n    setCurrentSong(id);\n  };\n\n  const filteredSongList = songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  var songsContent;\n\n  if (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"insonglist\",\n      onDoubleClick: () => ChangePlayingNow(song.id),\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like,\n        playNow: currentSong\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n  } else {\n    songsContent = songs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"insonglist\",\n      onDoubleClick: () => ChangePlayingNow(song.id),\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like,\n        playNow: currentSong\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 134\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"songList\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"songListTable\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"headRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deezer link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), songsContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongList, \"39T5ZeJ3V/G/b0ALZv72XmjHerc=\");\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/SongList.js"],"names":["SongItem","useEffect","useState","SongFilter","SongList","songs","currentSong","setCurrentSong","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","ChangePlayingNow","id","console","log","map","song","playNow","filteredSongList","filter","artist","songsContent","length","title","album","duration","link","like"],"mappings":"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","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useEffect, useState} from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport './styles/Songlist.css'\n\n\nconst SongList = ({songs}) => {\n    const [currentSong, setCurrentSong] = useState();\n    const [filteredArtist, setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) => {\n        setFilteredArtist(selectedArtist);\n    };\n\n    const ChangePlayingNow = (id) =>{\n        console.log(id)\n        songs.map((song) => song.id === id ? song.playNow=true: song.playNow=false)\n\n        setCurrentSong(id);\n    }\n\n\n\n    const filteredSongList = songs.filter(song => {\n        return song.artist === filteredArtist;\n    });\n\n    var songsContent;\n    if (filteredSongList.length > 0) {\n        songsContent = filteredSongList.map((song) =>\n            <tr key={song.id} className='insonglist' onDoubleClick={() => ChangePlayingNow(song.id)}>\n            <SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n            playNow={currentSong}\n\n        />\n        </tr>)\n    } else {\n        songsContent = songs.map((song) => <tr key={song.id} className='insonglist' onDoubleClick={() => ChangePlayingNow(song.id)} ><SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n            playNow={currentSong}\n\n        /></tr>)\n    }\n    return (\n        <div>\n        <SongFilter\n                selected={filteredArtist}\n                onChangeFilter={filterChangeHandler}\n            />\n        <table className=\"songList\">\n        <thead className=\"songListTable\">\n            <tr className=\"headRow\">\n            <th>Name</th>\n            <th>Artist</th>\n            <th>Album</th>\n            <th>Duration</th>\n            <th>Deezer link</th>\n            <th>like</th>\n                </tr>\n        </thead>\n\n            {songsContent}\n\n        </table></div>\n    );\n}\nexport default SongList;\n"]},"metadata":{},"sourceType":"module"}