{"ast":null,"code":"var _jsxFileName = \"/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js\",\n    _s = $RefreshSig$();\n\nimport SongItem from \"./SongItem\";\nimport { useState } from \"react\";\nimport SongFilter from \"./SongFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songlist = props => {\n  _s();\n\n  const [filteredArtist, setFilteredArtist] = useState('');\n\n  const filterChangeHandler = selectedArtist => {\n    setFilteredArtist(selectedArtist);\n  };\n\n  const [playingNow, setPlayNow] = useState(false);\n\n  const changePlayingNow = id => {\n    songsContent.map(song => song.id === id ? song.playing = true : song.playing = false);\n  };\n\n  const filteredSongList = props.songs.filter(song => {\n    return song.artist === filteredArtist;\n  });\n  let songsContent;\n\n  if (filteredSongList.length > 0) {\n    songsContent = filteredSongList.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: song.id,\n      onDoubleClick: () => {\n        changePlayingNow(song.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 141\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 55\n    }, this));\n  } else {\n    songsContent = props.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: song.id,\n      children: /*#__PURE__*/_jsxDEV(SongItem, {\n        title: song.title,\n        artist: song.artist,\n        album: song.album,\n        duration: song.duration,\n        link: song.link,\n        like: song.like\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 90\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 50\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"songList\",\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      selected: filteredArtist,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), songsContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Songlist, \"sPOI0Bdu5IyW/s7tTHCIE1fK0EQ=\");\n\n_c = Songlist;\nexport default Songlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songlist\");","map":{"version":3,"sources":["/Users/ra-be/tutorials/winran/serverless-app/src/components/songsLogic/Songlist.js"],"names":["SongItem","useState","SongFilter","Songlist","props","filteredArtist","setFilteredArtist","filterChangeHandler","selectedArtist","playingNow","setPlayNow","changePlayingNow","id","songsContent","map","song","playing","filteredSongList","songs","filter","artist","length","title","album","duration","link","like"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMM,mBAAmB,GAAIC,cAAD,IAAoB;AAC5CF,IAAAA,iBAAiB,CAACE,cAAD,CAAjB;AACH,GAFD;;AAGA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;;AAGA,QAAMU,gBAAgB,GAAIC,EAAD,IAAO;AAC5BC,IAAAA,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiBG,IAAI,CAACC,OAAL,GAAc,IAA/B,GAAsCD,IAAI,CAACC,OAAL,GAAa,KAA9E;AACH,GAFD;;AAKA,QAAMC,gBAAgB,GAAGb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBJ,IAAI,IAAI;AAChD,WAAOA,IAAI,CAACK,MAAL,KAAgBf,cAAvB;AACH,GAFwB,CAAzB;AAIA,MAAIQ,YAAJ;;AACA,MAAII,gBAAgB,CAACI,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BR,IAAAA,YAAY,GAAGI,gBAAgB,CAACH,GAAjB,CAAsBC,IAAD,iBAAU;AAAkB,MAAA,SAAS,EAAEA,IAAI,CAACH,EAAlC;AAAsC,MAAA,aAAa,EAAE,MAAI;AAACD,QAAAA,gBAAgB,CAACI,IAAI,CAACH,EAAN,CAAhB;AAA0B,OAApF;AAAA,6BAAsF,QAAC,QAAD;AAEhI,QAAA,KAAK,EAAEG,IAAI,CAACO,KAFoH;AAGhI,QAAA,MAAM,EAAEP,IAAI,CAACK,MAHmH;AAIhI,QAAA,KAAK,EAAEL,IAAI,CAACQ,KAJoH;AAKhI,QAAA,QAAQ,EAAER,IAAI,CAACS,QALiH;AAMhI,QAAA,IAAI,EAAET,IAAI,CAACU,IANqH;AAOhI,QAAA,IAAI,EAAEV,IAAI,CAACW;AAPqH,SAC3HX,IAAI,CAACH,EADsH;AAAA;AAAA;AAAA;AAAA;AAAtF,OAASG,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA,YAA/B,CAAf;AAWH,GAZD,MAYO;AACHC,IAAAA,YAAY,GAAGT,KAAK,CAACc,KAAN,CAAYJ,GAAZ,CAAiBC,IAAD,iBAAU;AAAkB,MAAA,SAAS,EAAEA,IAAI,CAACH,EAAlC;AAAA,6BAAwC,QAAC,QAAD;AAE7E,QAAA,KAAK,EAAEG,IAAI,CAACO,KAFiE;AAG7E,QAAA,MAAM,EAAEP,IAAI,CAACK,MAHgE;AAI7E,QAAA,KAAK,EAAEL,IAAI,CAACQ,KAJiE;AAK7E,QAAA,QAAQ,EAAER,IAAI,CAACS,QAL8D;AAM7E,QAAA,IAAI,EAAET,IAAI,CAACU,IANkE;AAO7E,QAAA,IAAI,EAAEV,IAAI,CAACW;AAPkE,SACxEX,IAAI,CAACH,EADmE;AAAA;AAAA;AAAA;AAAA;AAAxC,OAASG,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAf;AAUH;;AACD,sBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAEP,cADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKM,YANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvDD;;GAAMV,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import SongItem from \"./SongItem\";\nimport {useState} from \"react\";\nimport SongFilter from \"./SongFilter\";\n\n\nconst Songlist = (props) => {\n\n    const [filteredArtist, setFilteredArtist] = useState('')\n\n    const filterChangeHandler = (selectedArtist) => {\n        setFilteredArtist(selectedArtist);\n    };\n    const [playingNow, setPlayNow] = useState(false)\n\n\n    const changePlayingNow = (id) =>{\n        songsContent.map((song) => song.id === id ? song.playing =true : song.playing=false);\n    }\n\n\n    const filteredSongList = props.songs.filter(song => {\n        return song.artist === filteredArtist;\n    });\n\n    let songsContent;\n    if (filteredSongList.length > 0) {\n        songsContent = filteredSongList.map((song) => <li key={song.id} className={song.id} onDoubleClick={()=>{changePlayingNow(song.id)}}><SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n\n        />\n        </li>)\n    } else {\n        songsContent = props.songs.map((song) => <li key={song.id} className={song.id}  ><SongItem\n            key={song.id}\n            title={song.title}\n            artist={song.artist}\n            album={song.album}\n            duration={song.duration}\n            link={song.link}\n            like={song.like}\n\n        /></li>)\n    }\n    return (\n        <ul className=\"songList\">\n            <SongFilter\n                selected={filteredArtist}\n                onChangeFilter={filterChangeHandler}\n            />\n\n            {songsContent}\n\n        </ul>\n    );\n}\nexport default Songlist;"]},"metadata":{},"sourceType":"module"}